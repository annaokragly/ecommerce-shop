{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyBYzPkLAVX9BtY1wmo-vTZ_lFO4E8Z2DWw\",\n  authDomain: \"ecommerce-app-dbb.firebaseapp.com\",\n  databaseURL: \"https://ecommerce-app-dbb.firebaseio.com\",\n  projectId: \"ecommerce-app-dbb\",\n  storageBucket: \"ecommerce-app-dbb.appspot.com\",\n  messagingSenderId: \"138886627858\",\n  appId: \"1:138886627858:web:b6166ddc122c2db77c8ecb\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const collectionRef = firestone.collection('users');\n  const snapshot = await userRef.get();\n  const collectionSnapshot = await collectionRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Ania/ecommerce-app/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","collectionRef","firestone","collection","snapshot","get","collectionSnapshot","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,mCAFD;AAGXC,EAAAA,WAAW,EAAE,0CAHF;AAIXC,EAAAA,SAAS,EAAE,mBAJA;AAKXC,EAAAA,aAAa,EAAE,+BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE;AAPI,CAAf;AAUE,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,OAArB,CAAtB;AAEA,QAAMC,QAAQ,GAAG,MAAMP,OAAO,CAACQ,GAAR,EAAvB;AACA,QAAMC,kBAAkB,GAAG,MAAML,aAAa,CAACI,GAAd,EAAjC;;AAEA,MAAI,CAACD,QAAQ,CAACG,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBd,QAA/B;AACA,UAAMe,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMd,OAAO,CAACe,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGd;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOiB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACH;AACJ;;AAED,SAAOnB,OAAP;AACH,CA1BM;AA4BP,OAAO,MAAMoB,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACtE,QAAMlB,aAAa,GAAGH,SAAS,CAACK,UAAV,CAAqBe,aAArB,CAAtB;AACH,CAFM;AAIPjC,QAAQ,CAACmC,aAAT,CAAuBlC,MAAvB;AAEA,OAAO,MAAMmC,IAAI,GAAGpC,QAAQ,CAACoC,IAAT,EAAb;AACP,OAAO,MAAMvB,SAAS,GAAGb,QAAQ,CAACa,SAAT,EAAlB;AAEP,MAAMwB,QAAQ,GAAG,IAAIrC,QAAQ,CAACoC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAerC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyBYzPkLAVX9BtY1wmo-vTZ_lFO4E8Z2DWw\",\r\n    authDomain: \"ecommerce-app-dbb.firebaseapp.com\",\r\n    databaseURL: \"https://ecommerce-app-dbb.firebaseio.com\",\r\n    projectId: \"ecommerce-app-dbb\",\r\n    storageBucket: \"ecommerce-app-dbb.appspot.com\",\r\n    messagingSenderId: \"138886627858\",\r\n    appId: \"1:138886627858:web:b6166ddc122c2db77c8ecb\"\r\n  };\r\n\r\n  export const createUserProfileDocument = async (userAuth, additionalData) => {\r\n      if (!userAuth) return;\r\n\r\n      const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n      const collectionRef = firestone.collection('users');\r\n\r\n      const snapshot = await userRef.get();\r\n      const collectionSnapshot = await collectionRef.get();\r\n\r\n      if (!snapshot.exists) {\r\n          const { displayName, email } = userAuth;\r\n          const createdAt = new Date();\r\n\r\n          try {\r\n              await userRef.set({\r\n                  displayName,\r\n                  email,\r\n                  createdAt,\r\n                  ...additionalData\r\n              })\r\n          } catch (error) {\r\n              console.log('error creating user', error.message);\r\n          }\r\n      }\r\n\r\n      return userRef;\r\n  };\r\n\r\n  export const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\r\n      const collectionRef = firestore.collection(collectionKey);\r\n  };\r\n\r\n  firebase.initializeApp(config);\r\n\r\n  export const auth = firebase.auth();\r\n  export const firestore = firebase.firestore();\r\n\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({ prompt: 'select_account' });\r\n  export const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\n  export default firebase;"]},"metadata":{},"sourceType":"module"}